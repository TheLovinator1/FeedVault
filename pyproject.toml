[tool.poetry]
name = "feedvault"
version = "0.1.0"
description = "FeedVault is a Django app for archiving RSS feeds."
authors = ["Joakim Hells√©n <tlovinator@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = {extras = ["argon2"], version = "^5.0.2"}
python-dotenv = "^1.0.1"
feedparser = "^6.0.11"
psycopg = {extras = ["binary"], version = "^3.1.18"}
gunicorn = "^21.2.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.2.2"
djlint = "^1.34.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = ["migrations"]
fix = true
unsafe-fixes = true
preview = true
lint.select = ["ALL"]
lint.ignore = [
    "PLR6301", # Checks for the presence of unused self parameter in methods definitions
    "CPY001",  # Missing copyright notice at top of file
    "ERA001",  # Found commented-out code
    "FIX002",  # Line contains TODO
    "D104",    # Missing docstring in public package # TODO(TheLovinator): Fix this
    "D100",    # Missing docstring in public module # TODO(TheLovinator): Fix this
    # https://github.com/TheLovinator1/panso.se/issues/25
]
line-length = 120

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/tests.py" = [
    "S101",    # Allow asserts
    "ARG",     # Allow unused arguments
    "FBT",     # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLR2004", # Allow "assert response.status_code == 200" when testing views
    "D102",    # Allow missing docstrings in tests
    "PLR6301", # Checks for the presence of unused self parameter in methods definitions.
]


[tool.djlint]
format_attribute_template_tags = true
