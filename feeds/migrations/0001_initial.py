# Generated by Django 5.0.6 on 2024-05-20 00:49

import django.db.models.deletion
import feeds.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.TextField(help_text='The entry id.', primary_key=True, serialize=False)),
                ('updated', models.DateTimeField(help_text='The date the entry was last updated, according to the feed.', null=True)),
                ('title', models.TextField(help_text='The title of the entry.', null=True)),
                ('link', models.TextField(help_text='The URL of the entry.', null=True)),
                ('author', models.TextField(help_text='The author of the feed.', null=True)),
                ('published', models.DateTimeField(help_text='The date the entry was published.', null=True)),
                ('summary', models.TextField(help_text='A summary of the entry.', null=True)),
                ('read', models.BooleanField(default=False, help_text='Whether the entry has been read.')),
                ('read_modified', models.DateTimeField(help_text='When read was last modified, None if that never.', null=True)),
                ('added', models.DateTimeField(help_text='The date when the entry was added (first updated) to reader.', null=True)),
                ('added_by', models.TextField(help_text="The source of the entry. One of 'feed', 'user'.", null=True)),
                ('last_updated', models.DateTimeField(help_text='The date when the entry was last retrieved by reader.', null=True)),
                ('first_updated', models.DateTimeField(help_text='The date when the entry was first retrieved by reader.', null=True)),
                ('first_updated_epoch', models.DateTimeField(help_text='The date when the entry was first retrieved by reader, as an epoch timestamp.', null=True)),
                ('feed_order', models.PositiveIntegerField(help_text='The order of the entry in the feed.', null=True)),
                ('recent_sort', models.PositiveIntegerField(help_text='The order of the entry in the recent list.', null=True)),
                ('sequence', models.BinaryField(help_text='The sequence of the entry in the feed.', null=True)),
                ('original_feed', models.TextField(help_text='The URL of the original feed of the entry. If the feed URL never changed, the same as feed_url.', null=True)),
                ('data_hash', models.TextField(help_text='The hash of the entry data.', null=True)),
                ('data_hash_changed', models.BooleanField(default=False, help_text='Whether the data hash has changed since the last update.')),
                ('important', models.BooleanField(default=False, help_text='Whether the entry is important.')),
                ('important_modified', models.DateTimeField(help_text='When important was last modified, None if that never.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='The URL of the feed.', unique=True)),
                ('updated', models.DateTimeField(help_text='The date the feed was last updated, according to the feed.', null=True)),
                ('title', models.TextField(help_text='The title of the feed.', null=True)),
                ('link', models.TextField(help_text='The URL of a page associated with the feed.', null=True)),
                ('author', models.TextField(help_text='The author of the feed.', null=True)),
                ('subtitle', models.TextField(help_text='A description or subtitle for the feed.', null=True)),
                ('version', models.TextField(help_text='The version of the feed.', null=True)),
                ('user_title', models.TextField(help_text='User-defined feed title.', null=True)),
                ('added', models.DateTimeField(auto_now_add=True, help_text='The date when the feed was added.')),
                ('last_updated', models.DateTimeField(help_text='The date when the feed was last retrieved by reader.', null=True)),
                ('last_exception_type_name', models.TextField(help_text='The fully qualified name of the exception type.', null=True)),
                ('last_exception_value', models.TextField(help_text='The exception value.', null=True)),
                ('last_exception_traceback', models.TextField(help_text='The exception traceback.', null=True)),
                ('updates_enabled', models.BooleanField(default=True, help_text='Whether updates are enabled for the feed.')),
                ('stale', models.BooleanField(default=False, help_text='Whether the next update should update all entries, regardless of their hash or updated.')),
                ('http_etag', models.TextField(help_text='The HTTP ETag header.', null=True)),
                ('http_last_modified', models.TextField(help_text='The HTTP Last-Modified header.', null=True)),
                ('data_hash', models.TextField(help_text='The hash of the feed data.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='The file that was uploaded.', upload_to=feeds.models.get_upload_path)),
                ('original_filename', models.TextField(help_text='The original filename of the file.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The time the file was uploaded.')),
                ('has_been_processed', models.BooleanField(default=False, help_text='Has the file content been added to the archive?')),
                ('public', models.BooleanField(default=False, help_text='Is the file public?')),
                ('description', models.TextField(blank=True, help_text='Description added by user.')),
                ('notes', models.TextField(blank=True, help_text='Notes from admin.')),
            ],
            options={
                'verbose_name': 'Uploaded file',
                'verbose_name_plural': 'Uploaded files',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Enclosure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.TextField(help_text='The file URL.')),
                ('type', models.TextField(help_text='The file content type.', null=True)),
                ('length', models.PositiveIntegerField(help_text='The file length.', null=True)),
                ('entry', models.ForeignKey(help_text='The entry this enclosure is for.', on_delete=django.db.models.deletion.CASCADE, related_name='enclosures', to='feeds.entry')),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='The content value.')),
                ('type', models.TextField(help_text='The content type.', null=True)),
                ('language', models.TextField(help_text='The content language.', null=True)),
                ('entry', models.ForeignKey(help_text='The entry this content is for.', on_delete=django.db.models.deletion.CASCADE, related_name='content', to='feeds.entry')),
            ],
        ),
        migrations.AddField(
            model_name='entry',
            name='feed',
            field=models.ForeignKey(help_text='The feed this entry is from.', on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='feeds.feed'),
        ),
    ]
