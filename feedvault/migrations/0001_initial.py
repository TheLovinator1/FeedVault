# Generated by Django 5.0.3 on 2024-03-15 01:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True)),
                ('name', models.CharField(max_length=255)),
                ('categories', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('hidden', models.BooleanField(default=False)),
                ('hidden_at', models.DateTimeField(blank=True, null=True)),
                ('hidden_reason', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Domain',
                'verbose_name_plural': 'Domains',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(blank=True)),
                ('href', models.TextField(blank=True)),
                ('email', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
                'ordering': ['name'],
                'unique_together': {('name', 'email', 'href')},
            },
        ),
        migrations.CreateModel(
            name='Generator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(blank=True)),
                ('href', models.TextField(blank=True)),
                ('version', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Feed generator',
                'verbose_name_plural': 'Feed generators',
                'ordering': ['name'],
                'unique_together': {('name', 'version', 'href')},
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('rel', models.TextField(blank=True)),
                ('type', models.TextField(blank=True)),
                ('href', models.TextField(blank=True)),
                ('title', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Link',
                'verbose_name_plural': 'Links',
                'ordering': ['href'],
                'unique_together': {('href', 'rel')},
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(blank=True)),
                ('href', models.TextField(blank=True)),
                ('email', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Publisher',
                'verbose_name_plural': 'Publishers',
                'ordering': ['name'],
                'unique_together': {('name', 'email', 'href')},
            },
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_url', models.URLField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('bozo', models.BooleanField()),
                ('bozo_exception', models.TextField(blank=True)),
                ('encoding', models.TextField(blank=True)),
                ('etag', models.TextField(blank=True)),
                ('headers', models.JSONField(blank=True, null=True)),
                ('href', models.TextField(blank=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('namespaces', models.JSONField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('version', models.CharField(blank=True, max_length=255)),
                ('author', models.TextField(blank=True)),
                ('cloud', models.JSONField(blank=True, null=True)),
                ('contributors', models.JSONField(blank=True, null=True)),
                ('docs', models.TextField(blank=True)),
                ('errorreportsto', models.TextField(blank=True)),
                ('generator', models.TextField(blank=True)),
                ('icon', models.TextField(blank=True)),
                ('_id', models.TextField(blank=True)),
                ('image', models.JSONField(blank=True, null=True)),
                ('info', models.TextField(blank=True)),
                ('info_detail', models.JSONField(blank=True, null=True)),
                ('language', models.TextField(blank=True)),
                ('license', models.TextField(blank=True)),
                ('link', models.TextField(blank=True)),
                ('links', models.JSONField(blank=True, null=True)),
                ('logo', models.TextField(blank=True)),
                ('published', models.TextField(blank=True)),
                ('published_parsed', models.DateTimeField(blank=True, null=True)),
                ('publisher', models.TextField(blank=True)),
                ('rights', models.TextField(blank=True)),
                ('rights_detail', models.JSONField(blank=True, null=True)),
                ('subtitle', models.TextField(blank=True)),
                ('subtitle_detail', models.JSONField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('textinput', models.JSONField(blank=True, null=True)),
                ('title', models.TextField(blank=True)),
                ('title_detail', models.JSONField(blank=True, null=True)),
                ('ttl', models.TextField(blank=True)),
                ('updated', models.TextField(blank=True)),
                ('updated_parsed', models.DateTimeField(blank=True, null=True)),
                ('author_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='feeds', to='feedvault.author')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedvault.domain')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('generator_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='feeds', to='feedvault.generator')),
                ('publisher_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='feeds', to='feedvault.publisher')),
            ],
            options={
                'verbose_name': 'Feed',
                'verbose_name_plural': 'Feeds',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('author', models.TextField(blank=True)),
                ('comments', models.TextField(blank=True)),
                ('content', models.JSONField(blank=True, null=True)),
                ('contributors', models.JSONField(blank=True, null=True)),
                ('created', models.TextField(blank=True)),
                ('created_parsed', models.DateTimeField(blank=True, null=True)),
                ('enclosures', models.JSONField(blank=True, null=True)),
                ('expired', models.TextField(blank=True)),
                ('expired_parsed', models.DateTimeField(blank=True, null=True)),
                ('_id', models.TextField(blank=True)),
                ('license', models.TextField(blank=True)),
                ('link', models.TextField(blank=True)),
                ('links', models.JSONField(blank=True, null=True)),
                ('published', models.TextField(blank=True)),
                ('published_parsed', models.DateTimeField(blank=True, null=True)),
                ('publisher', models.TextField(blank=True)),
                ('source', models.JSONField(blank=True, null=True)),
                ('summary', models.TextField(blank=True)),
                ('summary_detail', models.JSONField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('title', models.TextField(blank=True)),
                ('title_detail', models.JSONField(blank=True, null=True)),
                ('updated', models.TextField(blank=True)),
                ('updated_parsed', models.DateTimeField(blank=True, null=True)),
                ('author_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='entries', to='feedvault.author')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedvault.feed')),
                ('publisher_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='entries', to='feedvault.publisher')),
            ],
            options={
                'verbose_name': 'Entry',
                'verbose_name_plural': 'Entries',
                'ordering': ['-created_parsed'],
            },
        ),
    ]
